un fisier de input care să blocheze un algoritm la timeout, dar minim un alt algoritm să dea soluție (de exemplu se blochează DF-ul dacă soluțiile sunt cât mai "în dreapta" în arborele de parcurgere)

dintre ultimele doua fisiere, cel putin un fisier sa dea drumul de cost minim pentru euristicile admisibile si un drum care nu e de cost minim pentru cea euristica neadmisibila


De afisat:
timpul de găsire a unei soluții (atenție, pentru soluțiile de la a doua încolo timpul se consideră tot de la începutul execuției algoritmului și nu de la ultima soluție)
numărul maxim de noduri existente la un moment dat în memorie
numărul total de noduri calculate (totalul de succesori generati; atenție la DFI și IDA* se adună pentru fiecare iteratie chiar dacă se repetă generarea arborelui, nodurile se vor contoriza de fiecare dată afișându-se totalul pe toate iterațiile


Problema se va rula cu algoritmii: UCS, A* (varianta care dă toate drumurile), A* optimizat (cu listele open și closed, care dă doar drumul de cost minim), IDA*.





Euristica:
Căutăm idei de euristici. Pentru a găsi euristici, luăm câteva exemple de stări nefinale și câteva exemple de stări finale și le observăm. Ne punem întrebarile:
    Ce elemente se schimbă pentru a ajunge într-o stare finală ?
    Câte elemente se schimbă? (în special când avem colecții de elemente: vectori sau matrici)
    Schimbarea unui element influențează schimbarea altor elemente? Dacă da, atunci trebuie să împărțim euristica la câte elemente se schimbă, deoarece dacă o mutare schimbă de exemplu 2 elemente dar o numărăm pentru fiecare element, ne iese o estimare mai mare decât costul real (neadmisibilă)
    În câți pași se schimbăun element șî de ce factori depinde? Pentru această întrebare putem încerca simplificări ale contextului, dar de care știm sigur că nu măresc numărul de pași ci doar eventual îl micșorează. De exemplu dacă vrem să vedem în câte mutări e parcursă o hartă reprezentată printr-o matrice, în care sunt și obstacole (celule în care nu putem intra). O simplificare bună e ignorarea obstacolelor (un obstacol înseamnă un ocol, deci mai mulți pași, astfel, ignorarea lor, nu poate decât să scadă numărul de pași estimat).